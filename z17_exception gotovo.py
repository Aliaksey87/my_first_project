# x = 0
# try:
#     x = 8 / y
#     print(x)
#     print("Хорошо поделил")
# except Exception as e:
#     print("Что-то пошло не так")
# x = x + 3
# print(x)
# print("Конец программы")

                            # raise вызвать, останавливает программу
                            # except словить, продолжает работать


# Задания ниже, модифицированные версии заданий, которые вы делали ранее.
# Формат: <номер задания>.<номер упражнения>
# 13.1 Написать функцию которая принимает число и если оно меньше или равно 34 печатает ваше имя иначе имя вашей мамы.
#    Если пришло не число вызвать исключение, в котором написать "Я принимаю только числа".
#    Чтобы в питоне определить что объект это число нужно вызвать функцию  isinstance(x, int)
# isinstance(23, int)   ---> True
# isinstance(‘23’, int)   ---> False
# def inp(x):
#     if isinstance(x, int):
#         if x <= 34:
#             print("первое")
#         else:
#             print("второе")
#     else:
#         raise Exception("Я принимаю только числа")
# inp('33')
# готово


# 13.2 Написать функцию которая принимает 2 числа, и если их сумма равна 5 делит эту сумму на 2 и возвращает результат в противном случае возвращает их сумму.
#   Если кто-либо из аргументов не число вызвать исключение, в котором написать "Я принимаю только числа"
# def inp_2(x, y):
#     if isinstance(x, int) and isinstance(y, int):
#         z = x + y
#         if z == 5:
#             print(z / 5)
#         else:
#             print(z)
#     else:
#         raise Exception("Я принимаю только числа")
# inp_2(1, '2')
# готово


# 13.3 Написать функцию принимающую строку и если она меньше пяти символов напечатать её
#      иначе напечатать сообщение 'строка сильно большая , я устал'.
#      Если пришла не строка вызвать исключение, в котором написать "Я печатаю только строки"

# def inp_3(x):
#     if isinstance(x, str):
#         y = len(x)
#         if y < 5:
#             print(x)
#         else:
#             print('строка сильно большая , я устал')
#     else:
#         raise Exception('Я печатаю только строки')
# inp_3(3233)
# готово


# 13.5 Написать функцию которая спрашивает таблицу умножения у пользователя и если он отвечает верно печатает 'верно' иначе печатает неверно.
#      Если пользователь введёт не число в ответ, отреагировать на исключение и переспросить число.
# def inp_5():
#     while True:
#         try:
#             x = int(input('число первое '))
#             y = int(input('число второе '))
#             z = int(input('Результат? '))
#             z1 = x * y
#             if z == z1:
#                 print('верно')
#             else:
#                 print('неверно')
#             break
#         except Exception as e:
#             print('произашла ошибка')
# inp_5()
# готово


# 13.8 Написать функцию принимающую имя. Если имена 'Вася' или 'Петя' то печатает привет братаны.
#      Если она 'Толик' то напечатать 'Поделись на нолик'.
#      Если имя не 'Вася' или 'Петя' или 'Толик' вызвать исключение, в котором написать "Я тебя не знаю"
# def inp_8():
#     x = input('Напишите имя:')
#     if x == 'Вася' or x == 'Петя' or x == 'Толик':
#         if x == 'Вася' or x == 'Петя':
#             print('Привет братаны')
#         else:
#             print('Поделись на нолик')
#     else:
#         raise Exception('Я тебя не знаю')
# inp_8()
# готово


# 14.1 Написать функцию, которая принимает список чисел и возвращает их сумму. Нельзя пользоваться sum.
#      Если в списке будет хоть одно не число, то возникнет исключение. На его нужно отреагировать, просуммировав только числа.
def ex_1(a):
    b = 0
    for x in a:
        try:
            b = b + x
        except Exception:
            print('Давай только числа')
    return b
# print(ex_1([5, 6, 3, 're', 7, 4, 12]))
# готово


# 14.5 Написать функцию, которая принимает список чисел и возвращает среднее значение для этих чисел.
#      Нельзя пользоваться sum\statistics.mean
#      Вызвать исключение когда пришёл пустой список, в котором написать "Не могу посчитать среднее для пустого списка"
def ex_5(a):
    if a == []:
        raise Exception('Не могу посчитать среднее для пустого списка')
    y = 0
    z = 0
    for x in a:
        y = y + x
        z = z + 1
    return y/z
# print('Среднее значание= ', ex_5([]))
# готово

# raise вызвать, останавливает программу
# except словить, продолжает работать


# 14.6 Написать функцию, которая принимает список чисел и возвращает максимальный элемент. Нельзя пользоваться max\sort
#      Если в списке нет чисел то вызвать исключение, в котором написать "В списке нет чисел"
def ex_6(a):
    if a == []:
        raise Exception('Не могу определить максимальное число для пустого списка')
    y = 0
    for x in a:
        if x >= y:
            y = x
        else:
            y > x                # просто какое-то действие
    return y
# print('Максимальный элемент в списке= ', ex_6([4, 5, 99, 5, 3, 89]))
# готово


# 14.8 Написать функцию, которая принимает список чисел и возвращает только чётные числа.
#      Отреагировать на исключение если с списке есть не число. Просто пропустить нечисловой элемент.
def ex_8(a):
    b = []
    y = 0
    for x in a:
        try:
            if x%2 == 0:
                b.append(x)
            else:
                True
        except Exception:
            print('Lfdfq')
    return b
# print(ex_8([4, 5, 88, 'er', 8, 3, 89, 0, -44, 44, 28, 17, 32, 22, 33, 100, 1000000, 1000002]))
# готово

# проверено